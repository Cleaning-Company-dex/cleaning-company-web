name: Debug PythonAnywhere Deployment

on:
  workflow_dispatch: # Permite ejecutar manualmente
  push:
    branches:
      - main

jobs:
  debug:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test API Token
        env:
          PA_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
        run: |
          echo "üîç Probando token de API..."

          # Verificar si el token existe
          if [ -z "$PA_API_TOKEN" ]; then
            echo "‚ùå PYTHONANYWHERE_API_TOKEN no est√° configurado"
            exit 1
          else
            echo "‚úì Token encontrado (longitud: ${#PA_API_TOKEN} caracteres)"
          fi

          # Probar el token
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Token $PA_API_TOKEN" \
            "https://www.pythonanywhere.com/api/v0/user/yerielcruz18/cpu/")

          if [ "$response" = "200" ]; then
            echo "‚úÖ Token de API v√°lido"
          else
            echo "‚ùå Token de API inv√°lido o expirado (HTTP $response)"
            echo "Por favor, genera un nuevo token en:"
            echo "https://www.pythonanywhere.com/user/yerielcruz18/account/"
            exit 1
          fi

      - name: Check Website Status
        run: |
          echo "üåê Verificando estado del sitio web..."

          # Intentar diferentes m√©todos de verificaci√≥n
          echo "M√©todo 1: curl simple"
          curl -I https://yerielcruz18.pythonanywhere.com 2>&1 | head -n 5

          echo ""
          echo "M√©todo 2: wget"
          wget --spider -S https://yerielcruz18.pythonanywhere.com 2>&1 | head -n 10

          echo ""
          echo "M√©todo 3: curl con user agent"
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "User-Agent: Mozilla/5.0" \
            https://yerielcruz18.pythonanywhere.com)
          echo "C√≥digo de respuesta: $response"

      - name: Test API Endpoints
        env:
          PA_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
        run: |
          echo "üîå Probando endpoints de API..."

          # Listar webapps
          echo "Obteniendo informaci√≥n de webapps..."
          curl -s -H "Authorization: Token $PA_API_TOKEN" \
            "https://www.pythonanywhere.com/api/v0/user/yerielcruz18/webapps/" \
            | python3 -m json.tool || echo "Error al obtener webapps"

          echo ""
          echo "Estado de las consolas..."
          curl -s -H "Authorization: Token $PA_API_TOKEN" \
            "https://www.pythonanywhere.com/api/v0/user/yerielcruz18/consoles/" \
            | python3 -m json.tool || echo "No hay consolas activas"

      - name: Repository Info
        run: |
          echo "üì¶ Informaci√≥n del repositorio:"
          echo "- Repositorio: ${{ github.repository }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit SHA: ${{ github.sha }}"
          echo "- Autor: ${{ github.actor }}"
          echo ""
          echo "üìã Archivos en el repositorio:"
          ls -la
          echo ""
          if [ -f "requirements.txt" ]; then
            echo "üì¶ Dependencias (requirements.txt):"
            cat requirements.txt
          else
            echo "‚ö†Ô∏è No se encontr√≥ requirements.txt"
          fi
